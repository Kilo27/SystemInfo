/*
 * This source file was generated by the Gradle 'init' task
 */

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class App {
    public static void main(String[] args) {

        MainMenuFrame mainMenuFrame = new MainMenuFrame();



    }
}

abstract class AbstractSystemInfoFrame extends JFrame {
    Color backgroundColor = Color.decode("#211832"); // Background Colour
    Color textColor = Color.decode("#FFFFFF"); // Text Colour
    int windowWidth = 1200;
    int windowHeight = 800;

    protected AbstractSystemInfoFrame(){
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // Exiting the window ends the program
        setResizable(false);
        setSize(windowWidth, windowHeight);
        setLayout(null); // using no layout manager
        getContentPane().setBackground(backgroundColor); // set background color
    }
}

class MainMenuFrame extends AbstractSystemInfoFrame {

    public MainMenuFrame() {

        super();
        setTitle("System Info - Main Menu");

        // Buttons
        JButton[] selectMenuButtons = {
                new JButton("CPU"),
                new JButton("Graphics"),
                new JButton("Memory"),
                new JButton("Disks"),
                new JButton("Network"),
                new JButton("USB Devices"),
                new JButton("PCI Devices")
        };

        Class<? extends AbstractSystemInfoFrame>[] frameClasses = new Class[]{
                CPUMenuFrame.class,
                GraphicsMenuFrame.class,
                MemoryMenuFrame.class,
                DisksMenuFrame.class,
                NetworkMenuFrame.class,
                USBDevicesMenuFrame.class,
                PCIDevicesMenuFrame.class
        };

        int buttonDownShift = 220; // Y-Position of Top Button
        for (JButton button : selectMenuButtons) {
            button.setBounds(480, buttonDownShift, 200, 50);
            buttonDownShift += 50; // Moves down Y-Position for Next Button
            add(button);
        }

        // Add action to the button
        selectMenuButtons[0].addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new CPUMenuFrame();
                dispose();
            }
        });

        // OS Logo
        ImageIcon icon = new ImageIcon("assets/iconWindows11.png");
        JLabel osLogo = new JLabel(icon);
        osLogo.setBounds(550, 80, 50, 50);
        add(osLogo);

        // Make Frame Visible
        setVisible(true);
    }


}

class CPUMenuFrame extends AbstractSystemInfoFrame {
    public CPUMenuFrame() {
        super();
        setTitle("System Info - CPU");

        JLabel testText = new JLabel("Yay!");
        testText.setBounds(480, 80, 50, 50);
        testText.setForeground(textColor);

        LogicalCPU logicalCPU = new LogicalCPU();

        add(testText);

        setVisible(true);
    }
}

class GraphicsMenuFrame extends AbstractSystemInfoFrame {
    public GraphicsMenuFrame() {
        super();
        setTitle("System Info - Graphics");
    }
}

class MemoryMenuFrame extends AbstractSystemInfoFrame {
    public MemoryMenuFrame() {
        super();
        setTitle("System Info - Memory");
    }
}

class DisksMenuFrame extends AbstractSystemInfoFrame {
    public DisksMenuFrame() {
        super();
        setTitle("System Info - Disks");
    }
}

class NetworkMenuFrame extends AbstractSystemInfoFrame {
    public NetworkMenuFrame() {
        super();
        setTitle("System Info - Network");
    }
}

class USBDevicesMenuFrame extends AbstractSystemInfoFrame {
    public USBDevicesMenuFrame() {
        super();
        setTitle("System Info - USB Devices");
    }
}

class PCIDevicesMenuFrame extends AbstractSystemInfoFrame {
    public PCIDevicesMenuFrame() {
        super();
        setTitle("System Info - PCI Devices");
    }
}
